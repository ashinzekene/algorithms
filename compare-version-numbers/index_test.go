package algorithms

import (
	"fmt"
	"testing"

	"github.com/stretchr/testify/assert"
)

func Test_compareVersion(t *testing.T) {
	testCases := []struct {
		Version1 string
		Version2 string
		Expected int
	}{
		{
			"1.01",
			"1.001",
			0,
		},
		{
			"1.0.1",
			"1",
			1,
		},
		{
			"1.0",
			"1.0.0",
			0,
		},
		{
			"0.1",
			"1.1",
			-1,
		},
		{
			"1.1.0.0.0.0",
			"1.1",
			0,
		},
		{
			"19.8.3.17.5.01.0.0.4.0.0.0.0.0.0.0.0.0.0.0.0.0.00.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.000000.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.000000",
			"19.8.3.17.5.01.0.0.4.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0000.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.000000",
			0,
		},
	}
	for _, tc := range testCases {
		result := compareVersion(tc.Version1, tc.Version2)
		assert.Equal(t, tc.Expected, result, fmt.Sprintf("Failed for %s and %s", tc.Version1, tc.Version2))
	}
}
